@model TofasRandevu.ViewModels.AppointmentLocation

@using (Html.BeginForm("Location", "CustomerAppointment", FormMethod.Post, new { id = "LocationForm", @class = "f1" }))
{
    @Html.AntiForgeryToken()
    <h2>SERVİS RANDEVUSU</h2>
    <div class="f1-steps">
        <div class="f1-progress">
            <div class="f1-progress-line" data-now-value="35" data-number-of-steps="4" style="width: 35%;"></div>
        </div>
        <div class="f1-step active">
            <p>Kişisel Bilgilerin Girilmesi</p>
            <div class="f1-step-icon">1</div>
        </div>
        <div class="f1-step active">
            <p>Randevu Tarihi ve Servis Seçimi</p>
            <div class="f1-step-icon">2</div>
        </div>
        <div class="f1-step">
            <p>Servis Danışmanı Seçimi</p>
            <div class="f1-step-icon">3</div>
        </div>
        <div class="f1-step">
            <p>Servis Bakım Detayları Girişi</p>
            <div class="f1-step-icon">4</div>
        </div>
    </div>

    <fieldset>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4>Randevu Tarihi ve Servis Seçimi</h4>
        <div class="form-group" style="width:70%">
            <div class="input-group" id="dateTime">
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.AppointmentDate).ToHtmlString()) } })
                <span class="input-group-addon">
                    <span class="fa fa-calendar">
                    </span>
                </span>
            </div>
        </div>
        <h4>Hangi Servis Noktamızdan Hizmet Almak İstersiniz?</h4>

        <div class="form-group">
            @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { style = "visibility: hidden;width:0px;height:0px;z-index:-1;position:absolute;" } })
            @Html.LabelFor(model => model.CityCode, new { @class = "sr-only" })
            @Html.DropDownListFor(model => model.CityCode, (SelectList)ViewBag.Cities, HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.CityCode).ToHtmlString()), new { id = "citySelectBox", @class = "form-control", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.CityCode).ToHtmlString()) })
            @Html.ValidationMessageFor(model => model.CityCode, "", new { @class = "text-danger" })

        </div>

        @*<div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TownCode, Enumerable.Empty<SelectListItem>(), HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.TownCode).ToHtmlString()), new { id = "townSelectBox", @class = "form-control", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.TownCode).ToHtmlString()) })
                    @Html.ValidationMessageFor(model => model.TownCode, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { style = "visibility: hidden;width:0px;height:0px;z-index:-1;position:absolute;" } })
            @Html.LabelFor(model => model.ServiceCode, new { @class = "sr-only" })
            @Html.DropDownListFor(model => model.ServiceCode, Enumerable.Empty<SelectListItem>(), HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.ServiceCode).ToHtmlString()), new { id = "serviceSelectBox", @class = "form-control", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.ServiceCode).ToHtmlString()) })
            @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger" })

        </div>

        <div class="form-group f1-buttons">
            <button type="submit" value="Devam" class="btn btn-next" />
        </div>
    </fieldset>
}

@section Scripts {
    <script type='text/javascript'>
    $(document).ready(function () {
        var citySelectBox = $("#citySelectBox");
        //var townSelectBox = $("#townSelectBox");
        var serviceSelectBox = $("#serviceSelectBox");

        citySelectBox.change(function () {
            var cityCode = this.value;
            var cityName = $("#citySelectBox option:selected").text();
            $("#CityName").val(cityName);
            //fillEmpty(townSelectBox, 'İlçe');
            fillEmpty(serviceSelectBox, 'Servis');
            //fillTownList(cityCode);
            fillServiceList(cityCode);
        });

        serviceSelectBox.change(function () {
            var serviceCode = this.value;
            var serviceName = $("#serviceSelectBox option:selected").text();
            $("#ServiceName").val(serviceName);
        });

        function fillEmpty(selectBox, text) {
            selectBox.empty();
            $(document.createElement('option'))
                        .attr('value', '')
                        .text(text)
                        .appendTo(selectBox);
        }


        //function fillTownList(cityCode) {
        //    var url = '/Location/GetTownList/' + cityCode;
        //    $.getJSON(url, function (result) {
        //        $(result).each(function () {
        //            $(document.createElement('option'))
        //                .attr('value', this.CityCode)
        //                .text(this.Explanation)
        //                .appendTo(townSelectBox);
        //        });
        //    });
        //}
        function fillServiceList(cityCode) {
            var url = '@Url.Action("GetServiceList", "Location", null, Request.Url.Scheme)/' + cityCode + "/@Session["rezervationId"]";
            $.getJSON(url, function (result) {
                $(result).each(function () {
                    $(document.createElement('option'))
                        .attr('value', this.CompanyCode)
                        .text(this.CompanyName)
                        .appendTo(serviceSelectBox);
                });
            });

        }


        $('#dateTime').datetimepicker({
            format: 'DD.MM.YYYY',
            locale: 'tr',
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down"
            }
        });
    });
</script>
}
